{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { query, collection, onSnapshot } from \"firebase/firestore\";\nlet initState = [];\nconst RootReducer = function () {\n  _s();\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  useEffect(() => {\n    const q = query(collection(db, 'note'));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      querySnapshot.forEach(doc => {\n        initState.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n    });\n    return () => unsubscribe();\n  }, []);\n  if (action.type == 'CHANGE_STATE') {\n    const newState = state.notes;\n    newState.map(note => {\n      if (note.id == action.id) {\n        note.descrizione = action.change;\n        note.nome = action.nome;\n      }\n    });\n    return {\n      ...state,\n      notes: newState\n    };\n  } else if (action.type == 'ADD_NOTE') {\n    let id = state.notes.length;\n    const newNote = {\n      id: Math.random(),\n      nome: 'new note',\n      descrizione: '.'\n    };\n    const newNotes = [...state.notes, newNote];\n    return {\n      ...state,\n      notes: newNotes\n    };\n  } else if (action.type == 'DELETE_NOTE') {\n    const newState = state.notes.filter(note => note.id != action.id);\n    return {\n      ...state,\n      notes: newState\n    };\n  }\n  return state;\n};\n_s(RootReducer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RootReducer;\nexport default rootReducer;\nvar _c;\n$RefreshReg$(_c, \"RootReducer\");","map":{"version":3,"names":["useState","useEffect","db","query","collection","onSnapshot","initState","RootReducer","_s","state","arguments","length","undefined","action","q","unsubscribe","querySnapshot","forEach","doc","push","data","id","type","newState","notes","map","note","descrizione","change","nome","newNote","Math","random","newNotes","filter","_c","rootReducer","$RefreshReg$"],"sources":["C:/Users/Vittorio/Desktop/react/note/src/component/rootReducer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { query, collection, onSnapshot } from \"firebase/firestore\";\r\n\r\nlet initState = []\r\n\r\nconst RootReducer = (state = initState, action)=>{\r\n\r\n    useEffect(()=>{\r\n        const q = query(collection(db, 'note'))\r\n        const unsubscribe = onSnapshot(q, (querySnapshot)=>{\r\n            querySnapshot.forEach((doc)=>{\r\n                initState.push({...doc.data(), id: doc.id})\r\n            })\r\n        })\r\n        return () => unsubscribe()\r\n    },[])\r\n\r\n  if(action.type == 'CHANGE_STATE'){\r\n      const newState = state.notes;\r\n      newState.map(note=>{\r\n          if(note.id == action.id){\r\n          note.descrizione = action.change\r\n          note.nome = action.nome\r\n      }})\r\n      return{\r\n          ...state,\r\n         notes: newState\r\n      }\r\n  }else if(action.type == 'ADD_NOTE'){\r\n     let id = state.notes.length\r\n     const newNote = {\r\n      id: Math.random(),\r\n      nome: 'new note',\r\n      descrizione:'.'\r\n     };\r\n     const newNotes =[...state.notes, newNote];\r\n     return{\r\n      ...state,\r\n      notes: newNotes\r\n     }\r\n  }else if(action.type == 'DELETE_NOTE'){\r\n      const newState = state.notes.filter(note=> note.id != action.id)\r\n      return{\r\n          ...state,\r\n          notes : newState\r\n      }\r\n  }\r\n  return state\r\n}\r\n\r\n\r\n\r\nexport default rootReducer;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,KAAK,EAAEC,UAAU,EAAEC,UAAU,QAAQ,oBAAoB;AAElE,IAAIC,SAAS,GAAG,EAAE;AAElB,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA6B;EAAAC,EAAA;EAAA,IAA5BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,SAAS;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAE1CX,SAAS,CAAC,MAAI;IACV,MAAMa,CAAC,GAAGX,KAAK,CAACC,UAAU,CAACF,EAAE,EAAE,MAAM,CAAC,CAAC;IACvC,MAAMa,WAAW,GAAGV,UAAU,CAACS,CAAC,EAAGE,aAAa,IAAG;MAC/CA,aAAa,CAACC,OAAO,CAAEC,GAAG,IAAG;QACzBZ,SAAS,CAACa,IAAI,CAAC;UAAC,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAC;UAAEC,EAAE,EAAEH,GAAG,CAACG;QAAE,CAAC,CAAC;MAC/C,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAO,MAAMN,WAAW,CAAC,CAAC;EAC9B,CAAC,EAAC,EAAE,CAAC;EAEP,IAAGF,MAAM,CAACS,IAAI,IAAI,cAAc,EAAC;IAC7B,MAAMC,QAAQ,GAAGd,KAAK,CAACe,KAAK;IAC5BD,QAAQ,CAACE,GAAG,CAACC,IAAI,IAAE;MACf,IAAGA,IAAI,CAACL,EAAE,IAAIR,MAAM,CAACQ,EAAE,EAAC;QACxBK,IAAI,CAACC,WAAW,GAAGd,MAAM,CAACe,MAAM;QAChCF,IAAI,CAACG,IAAI,GAAGhB,MAAM,CAACgB,IAAI;MAC3B;IAAC,CAAC,CAAC;IACH,OAAM;MACF,GAAGpB,KAAK;MACTe,KAAK,EAAED;IACV,CAAC;EACL,CAAC,MAAK,IAAGV,MAAM,CAACS,IAAI,IAAI,UAAU,EAAC;IAChC,IAAID,EAAE,GAAGZ,KAAK,CAACe,KAAK,CAACb,MAAM;IAC3B,MAAMmB,OAAO,GAAG;MACfT,EAAE,EAAEU,IAAI,CAACC,MAAM,CAAC,CAAC;MACjBH,IAAI,EAAE,UAAU;MAChBF,WAAW,EAAC;IACb,CAAC;IACD,MAAMM,QAAQ,GAAE,CAAC,GAAGxB,KAAK,CAACe,KAAK,EAAEM,OAAO,CAAC;IACzC,OAAM;MACL,GAAGrB,KAAK;MACRe,KAAK,EAAES;IACR,CAAC;EACJ,CAAC,MAAK,IAAGpB,MAAM,CAACS,IAAI,IAAI,aAAa,EAAC;IAClC,MAAMC,QAAQ,GAAGd,KAAK,CAACe,KAAK,CAACU,MAAM,CAACR,IAAI,IAAGA,IAAI,CAACL,EAAE,IAAIR,MAAM,CAACQ,EAAE,CAAC;IAChE,OAAM;MACF,GAAGZ,KAAK;MACRe,KAAK,EAAGD;IACZ,CAAC;EACL;EACA,OAAOd,KAAK;AACd,CAAC;AAAAD,EAAA,CA3CKD,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AA+CjB,eAAe6B,WAAW;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}