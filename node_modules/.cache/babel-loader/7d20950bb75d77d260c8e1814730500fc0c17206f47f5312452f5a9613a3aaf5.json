{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport firebase from '../firebase';\nimport { useDispatch } from 'react-redux';\nimport { query, collection, onSnapshot } from \"firebase/firestore\";\nconst initState = {\n  notes: []\n};\nconst fetchData = () => {\n  return async dispatch => {\n    const q = query(collection(db, 'note'));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const data = [];\n      querySnapshot.forEach(doc => {\n        data.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      dispatch({\n        type: 'FETCH_DATA_SUCCESS',\n        payload: data\n      });\n    });\n    return () => unsubscribe();\n  };\n};\nconst RootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type == 'FETCH_DATA_SUCCESS') {\n    console.log('ho caricato');\n    return {\n      ...state,\n      notes: action.payload\n    };\n  } else if (action.type == 'CHANGE_STATE') {\n    const newState = state.notes;\n    newState.map(note => {\n      if (note.id == action.id) {\n        note.descrizione = action.change;\n        note.nome = action.nome;\n      }\n    });\n    return {\n      ...state,\n      notes: newState\n    };\n  } else if (action.type == 'ADD_NOTE') {\n    let id = state.notes.length;\n    const newNote = {\n      id: Math.random(),\n      nome: 'new note',\n      descrizione: '.'\n    };\n    const newNotes = [...state.notes, newNote];\n    return {\n      ...state,\n      notes: newNotes\n    };\n  } else if (action.type == 'DELETE_NOTE') {\n    const newState = state.notes.filter(note => note.id != action.id);\n    return {\n      ...state,\n      notes: newState\n    };\n  }\n  return state;\n};\n_c = RootReducer;\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n};\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n_c2 = App;\nexport default RootReducer;\nvar _c, _c2;\n$RefreshReg$(_c, \"RootReducer\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","db","firebase","useDispatch","query","collection","onSnapshot","initState","notes","fetchData","dispatch","q","unsubscribe","querySnapshot","data","forEach","doc","push","id","type","payload","RootReducer","state","arguments","length","undefined","action","console","log","newState","map","note","descrizione","change","nome","newNote","Math","random","newNotes","filter","_c","App","_s","_c2","$RefreshReg$"],"sources":["C:/Users/Vittorio/Desktop/react/note/src/component/rootReducer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from '../firebase';\r\nimport { useDispatch } from 'react-redux';\r\nimport { query, collection, onSnapshot } from \"firebase/firestore\";\r\n\r\nconst initState = {\r\n    notes: [],\r\n  };\r\n\r\n  const fetchData = () => {\r\n    return async (dispatch) => {\r\n      const q = query(collection(db, 'note'));\r\n      const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n        const data = [];\r\n        querySnapshot.forEach((doc) => {\r\n          data.push({ ...doc.data(), id: doc.id });\r\n        });\r\n        dispatch({ type: 'FETCH_DATA_SUCCESS', payload: data });\r\n      });\r\n      return () => unsubscribe();\r\n    };\r\n  };\r\n\r\nconst RootReducer = (state = initState, action)=>{\r\n\r\n    if(action.type == 'FETCH_DATA_SUCCESS'){\r\n        console.log('ho caricato');\r\n        return {\r\n            ...state,\r\n            notes: action.payload,\r\n          };\r\n    }else if(action.type == 'CHANGE_STATE'){\r\n      const newState = state.notes;\r\n      newState.map(note=>{\r\n          if(note.id == action.id){\r\n          note.descrizione = action.change\r\n          note.nome = action.nome\r\n      }})\r\n      return{\r\n          ...state,\r\n         notes: newState\r\n      }\r\n  }else if(action.type == 'ADD_NOTE'){\r\n     let id = state.notes.length\r\n     const newNote = {\r\n      id: Math.random(),\r\n      nome: 'new note',\r\n      descrizione:'.'\r\n     };\r\n     const newNotes =[...state.notes, newNote];\r\n     return{\r\n      ...state,\r\n      notes: newNotes\r\n     }\r\n  }else if(action.type == 'DELETE_NOTE'){\r\n      const newState = state.notes.filter(note=> note.id != action.id)\r\n      return{\r\n          ...state,\r\n          notes : newState\r\n      }\r\n  }\r\n  return state\r\n}\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      dispatch(fetchData());\r\n    }, [dispatch]);\r\n  };\r\n\r\n  \r\n\r\nexport default RootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}