{"ast":null,"code":"import config from '.../public/config';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nconst initState = {\n  notes: [{\n    id: 0,\n    nome: \"spesa\",\n    descrizione: \"latte, uova, pollo\"\n  }, {\n    id: 1,\n    nome: \"esercizi di scuola\",\n    descrizione: \"matematica pagina 67-68, storia la rivoluzione francese\"\n  }]\n};\nfirebase.initializeApp(config);\nconst firestore = firebase.firestore();\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'CHANGE_STATE') {\n    const newState = state.notes;\n    newState.map(note => {\n      if (note.id === action.id) {\n        note.descrizione = action.change;\n        note.nome = action.nome;\n      }\n    });\n    return {\n      ...state,\n      notes: newState\n    };\n  } else if (action.type === 'ADD_NOTE') {\n    const newNote = {\n      id: Math.random(),\n      nome: 'new note',\n      descrizione: '.'\n    };\n    firestore.collection('notes').add(newNote).then(() => console.log('Nota aggiunta con successo al database')).catch(error => console.error('Errore durante l\\'aggiunta della nota:', error));\n    const newNotes = [...state.notes, newNote];\n    return {\n      ...state,\n      notes: newNotes\n    };\n  } else if (action.type === 'DELETE_NOTE') {\n    firestore.collection('notes').doc(action.id).delete().then(() => console.log('Nota eliminata con successo dal database')).catch(error => console.error('Errore durante l\\'eliminazione della nota:', error));\n    const newState = state.notes.filter(note => note.id !== action.id);\n    return {\n      ...state,\n      notes: newState\n    };\n  }\n  return state;\n};\nexport default rootReducer;","map":{"version":3,"names":["config","firebase","initState","notes","id","nome","descrizione","initializeApp","firestore","rootReducer","state","arguments","length","undefined","action","type","newState","map","note","change","newNote","Math","random","collection","add","then","console","log","catch","error","newNotes","doc","delete","filter"],"sources":["C:/Users/Vittorio/Desktop/react/note/src/component/rootReducer.js"],"sourcesContent":["import config from '.../public/config';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst initState={\r\n    notes:[\r\n        {id:0, nome:\"spesa\", descrizione:\"latte, uova, pollo\"},\r\n        {id:1, nome:\"esercizi di scuola\", descrizione:\"matematica pagina 67-68, storia la rivoluzione francese\"}\r\n    ]\r\n}\r\n\r\nfirebase.initializeApp(config);\r\nconst firestore = firebase.firestore();\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    if (action.type === 'CHANGE_STATE') {\r\n      const newState = state.notes;\r\n      newState.map((note) => {\r\n        if (note.id === action.id) {\r\n          note.descrizione = action.change;\r\n          note.nome = action.nome;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        notes: newState,\r\n      };\r\n    } else if (action.type === 'ADD_NOTE') {\r\n      const newNote = {\r\n        id: Math.random(),\r\n        nome: 'new note',\r\n        descrizione: '.',\r\n      };\r\n      firestore.collection('notes').add(newNote)\r\n        .then(() => console.log('Nota aggiunta con successo al database'))\r\n        .catch((error) => console.error('Errore durante l\\'aggiunta della nota:', error));\r\n  \r\n      const newNotes = [...state.notes, newNote];\r\n      return {\r\n        ...state,\r\n        notes: newNotes,\r\n      };\r\n    } else if (action.type === 'DELETE_NOTE') {\r\n      firestore.collection('notes').doc(action.id).delete()\r\n        .then(() => console.log('Nota eliminata con successo dal database'))\r\n        .catch((error) => console.error('Errore durante l\\'eliminazione della nota:', error));\r\n  \r\n      const newState = state.notes.filter((note) => note.id !== action.id);\r\n      return {\r\n        ...state,\r\n        notes: newState,\r\n      };\r\n    }\r\n    return state;\r\n  };\r\n  \r\n  export default rootReducer;"],"mappings":"AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAO,oBAAoB;AAE3B,MAAMC,SAAS,GAAC;EACZC,KAAK,EAAC,CACF;IAACC,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,OAAO;IAAEC,WAAW,EAAC;EAAoB,CAAC,EACtD;IAACF,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,oBAAoB;IAAEC,WAAW,EAAC;EAAyD,CAAC;AAEhH,CAAC;AAEDL,QAAQ,CAACM,aAAa,CAACP,MAAM,CAAC;AAC9B,MAAMQ,SAAS,GAAGP,QAAQ,CAACO,SAAS,CAAC,CAAC;AAEtC,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,SAAS;EAAA,IAAEY,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1C,IAAIC,MAAM,CAACC,IAAI,KAAK,cAAc,EAAE;IAClC,MAAMC,QAAQ,GAAGN,KAAK,CAACP,KAAK;IAC5Ba,QAAQ,CAACC,GAAG,CAAEC,IAAI,IAAK;MACrB,IAAIA,IAAI,CAACd,EAAE,KAAKU,MAAM,CAACV,EAAE,EAAE;QACzBc,IAAI,CAACZ,WAAW,GAAGQ,MAAM,CAACK,MAAM;QAChCD,IAAI,CAACb,IAAI,GAAGS,MAAM,CAACT,IAAI;MACzB;IACF,CAAC,CAAC;IACF,OAAO;MACL,GAAGK,KAAK;MACRP,KAAK,EAAEa;IACT,CAAC;EACH,CAAC,MAAM,IAAIF,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IACrC,MAAMK,OAAO,GAAG;MACdhB,EAAE,EAAEiB,IAAI,CAACC,MAAM,CAAC,CAAC;MACjBjB,IAAI,EAAE,UAAU;MAChBC,WAAW,EAAE;IACf,CAAC;IACDE,SAAS,CAACe,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAACJ,OAAO,CAAC,CACvCK,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CAAC,CACjEC,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC,CAAC;IAEnF,MAAMC,QAAQ,GAAG,CAAC,GAAGpB,KAAK,CAACP,KAAK,EAAEiB,OAAO,CAAC;IAC1C,OAAO;MACL,GAAGV,KAAK;MACRP,KAAK,EAAE2B;IACT,CAAC;EACH,CAAC,MAAM,IAAIhB,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IACxCP,SAAS,CAACe,UAAU,CAAC,OAAO,CAAC,CAACQ,GAAG,CAACjB,MAAM,CAACV,EAAE,CAAC,CAAC4B,MAAM,CAAC,CAAC,CAClDP,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC,CAAC,CACnEC,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC,CAAC;IAEvF,MAAMb,QAAQ,GAAGN,KAAK,CAACP,KAAK,CAAC8B,MAAM,CAAEf,IAAI,IAAKA,IAAI,CAACd,EAAE,KAAKU,MAAM,CAACV,EAAE,CAAC;IACpE,OAAO;MACL,GAAGM,KAAK;MACRP,KAAK,EAAEa;IACT,CAAC;EACH;EACA,OAAON,KAAK;AACd,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}