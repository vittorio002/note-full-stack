{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport firebase from './firebase';\nimport { query, collection, onSnapshot } from \"firebase/firestore\";\nconst initState = {\n  notes: []\n};\nconst RootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const fetchData = () => {\n    return async dispatch => {\n      const q = query(collection(db, 'note'));\n      const unsubscribe = onSnapshot(q, querySnapshot => {\n        const data = [];\n        querySnapshot.forEach(doc => {\n          data.push({\n            ...doc.data(),\n            id: doc.id\n          });\n        });\n        dispatch({\n          type: 'FETCH_DATA_SUCCESS',\n          payload: data\n        });\n      });\n      return () => unsubscribe();\n    };\n  };\n  if (action.type == 'FETCH_DATA_SUCCESS') {\n    return {\n      ...state,\n      notes: action.payload\n    };\n  } else if (action.type == 'CHANGE_STATE') {\n    const newState = state.notes;\n    newState.map(note => {\n      if (note.id == action.id) {\n        note.descrizione = action.change;\n        note.nome = action.nome;\n      }\n    });\n    return {\n      ...state,\n      notes: newState\n    };\n  } else if (action.type == 'ADD_NOTE') {\n    let id = state.notes.length;\n    const newNote = {\n      id: Math.random(),\n      nome: 'new note',\n      descrizione: '.'\n    };\n    const newNotes = [...state.notes, newNote];\n    return {\n      ...state,\n      notes: newNotes\n    };\n  } else if (action.type == 'DELETE_NOTE') {\n    const newState = state.notes.filter(note => note.id != action.id);\n    return {\n      ...state,\n      notes: newState\n    };\n  }\n  return state;\n};\n_c = RootReducer;\nexport default RootReducer;\nvar _c;\n$RefreshReg$(_c, \"RootReducer\");","map":{"version":3,"names":["useState","useEffect","db","firebase","query","collection","onSnapshot","initState","notes","RootReducer","state","arguments","length","undefined","action","fetchData","dispatch","q","unsubscribe","querySnapshot","data","forEach","doc","push","id","type","payload","newState","map","note","descrizione","change","nome","newNote","Math","random","newNotes","filter","_c","$RefreshReg$"],"sources":["C:/Users/Vittorio/Desktop/react/note/src/component/rootReducer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport firebase from './firebase';\r\nimport { query, collection, onSnapshot } from \"firebase/firestore\";\r\n\r\nconst initState = {\r\n    notes: [],\r\n  };\r\n\r\nconst RootReducer = (state = initState, action)=>{\r\n\r\n    const fetchData = () => {\r\n        return async (dispatch) => {\r\n          const q = query(collection(db, 'note'));\r\n          const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            const data = [];\r\n            querySnapshot.forEach((doc) => {\r\n              data.push({ ...doc.data(), id: doc.id });\r\n            });\r\n            dispatch({ type: 'FETCH_DATA_SUCCESS', payload: data });\r\n          });\r\n          return () => unsubscribe();\r\n        };\r\n      };\r\n\r\n    if(action.type == 'FETCH_DATA_SUCCESS'){\r\n        return {\r\n            ...state,\r\n            notes: action.payload,\r\n          };\r\n    }else if(action.type == 'CHANGE_STATE'){\r\n      const newState = state.notes;\r\n      newState.map(note=>{\r\n          if(note.id == action.id){\r\n          note.descrizione = action.change\r\n          note.nome = action.nome\r\n      }})\r\n      return{\r\n          ...state,\r\n         notes: newState\r\n      }\r\n  }else if(action.type == 'ADD_NOTE'){\r\n     let id = state.notes.length\r\n     const newNote = {\r\n      id: Math.random(),\r\n      nome: 'new note',\r\n      descrizione:'.'\r\n     };\r\n     const newNotes =[...state.notes, newNote];\r\n     return{\r\n      ...state,\r\n      notes: newNotes\r\n     }\r\n  }else if(action.type == 'DELETE_NOTE'){\r\n      const newState = state.notes.filter(note=> note.id != action.id)\r\n      return{\r\n          ...state,\r\n          notes : newState\r\n      }\r\n  }\r\n\r\n\r\n  \r\n  return state\r\n\r\n  \r\n}\r\n\r\n\r\n\r\nexport default RootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}