{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { query, collection, onS } from \"firebase/firestore\";\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === 'CHANGE_STATE') {\n    const newState = state.notes;\n    newState.map(note => {\n      if (note.id === action.id) {\n        note.descrizione = action.change;\n        note.nome = action.nome;\n      }\n    });\n    return {\n      ...state,\n      notes: newState\n    };\n  } else if (action.type === 'ADD_NOTE') {\n    const newNote = {\n      id: Math.random(),\n      nome: 'new note',\n      descrizione: '.'\n    };\n    firestore.collection('notes').add(newNote).then(() => console.log('Nota aggiunta con successo al database')).catch(error => console.error('Errore durante l\\'aggiunta della nota:', error));\n    const newNotes = [...state.notes, newNote];\n    return {\n      ...state,\n      notes: newNotes\n    };\n  } else if (action.type === 'DELETE_NOTE') {\n    firestore.collection('notes').doc(action.id).delete().then(() => console.log('Nota eliminata con successo dal database')).catch(error => console.error('Errore durante l\\'eliminazione della nota:', error));\n    const newState = state.notes.filter(note => note.id !== action.id);\n    return {\n      ...state,\n      notes: newState\n    };\n  }\n  return state;\n};\nexport default rootReducer;","map":{"version":3,"names":["useState","useEffect","db","query","collection","onS","rootReducer","state","arguments","length","undefined","initState","action","type","newState","notes","map","note","id","descrizione","change","nome","newNote","Math","random","firestore","add","then","console","log","catch","error","newNotes","doc","delete","filter"],"sources":["C:/Users/Vittorio/Desktop/react/note/src/component/rootReducer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { query, collection, onS } from \"firebase/firestore\";\r\n\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    if (action.type === 'CHANGE_STATE') {\r\n      const newState = state.notes;\r\n      newState.map((note) => {\r\n        if (note.id === action.id) {\r\n          note.descrizione = action.change;\r\n          note.nome = action.nome;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        notes: newState,\r\n      };\r\n    } else if (action.type === 'ADD_NOTE') {\r\n      const newNote = {\r\n        id: Math.random(),\r\n        nome: 'new note',\r\n        descrizione: '.',\r\n      };\r\n      firestore.collection('notes').add(newNote)\r\n        .then(() => console.log('Nota aggiunta con successo al database'))\r\n        .catch((error) => console.error('Errore durante l\\'aggiunta della nota:', error));\r\n  \r\n      const newNotes = [...state.notes, newNote];\r\n      return {\r\n        ...state,\r\n        notes: newNotes,\r\n      };\r\n    } else if (action.type === 'DELETE_NOTE') {\r\n      firestore.collection('notes').doc(action.id).delete()\r\n        .then(() => console.log('Nota eliminata con successo dal database'))\r\n        .catch((error) => console.error('Errore durante l\\'eliminazione della nota:', error));\r\n  \r\n      const newState = state.notes.filter((note) => note.id !== action.id);\r\n      return {\r\n        ...state,\r\n        notes: newState,\r\n      };\r\n    }\r\n    return state;\r\n  };\r\n  \r\n  export default rootReducer;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,KAAK,EAAEC,UAAU,EAAEC,GAAG,QAAQ,oBAAoB;AAG3D,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGG,SAAS;EAAA,IAAEC,MAAM,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1C,IAAIE,MAAM,CAACC,IAAI,KAAK,cAAc,EAAE;IAClC,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,KAAK;IAC5BD,QAAQ,CAACE,GAAG,CAAEC,IAAI,IAAK;MACrB,IAAIA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACM,EAAE,EAAE;QACzBD,IAAI,CAACE,WAAW,GAAGP,MAAM,CAACQ,MAAM;QAChCH,IAAI,CAACI,IAAI,GAAGT,MAAM,CAACS,IAAI;MACzB;IACF,CAAC,CAAC;IACF,OAAO;MACL,GAAGd,KAAK;MACRQ,KAAK,EAAED;IACT,CAAC;EACH,CAAC,MAAM,IAAIF,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IACrC,MAAMS,OAAO,GAAG;MACdJ,EAAE,EAAEK,IAAI,CAACC,MAAM,CAAC,CAAC;MACjBH,IAAI,EAAE,UAAU;MAChBF,WAAW,EAAE;IACf,CAAC;IACDM,SAAS,CAACrB,UAAU,CAAC,OAAO,CAAC,CAACsB,GAAG,CAACJ,OAAO,CAAC,CACvCK,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CAAC,CACjEC,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC,CAAC;IAEnF,MAAMC,QAAQ,GAAG,CAAC,GAAGzB,KAAK,CAACQ,KAAK,EAAEO,OAAO,CAAC;IAC1C,OAAO;MACL,GAAGf,KAAK;MACRQ,KAAK,EAAEiB;IACT,CAAC;EACH,CAAC,MAAM,IAAIpB,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;IACxCY,SAAS,CAACrB,UAAU,CAAC,OAAO,CAAC,CAAC6B,GAAG,CAACrB,MAAM,CAACM,EAAE,CAAC,CAACgB,MAAM,CAAC,CAAC,CAClDP,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC,CAAC,CACnEC,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC,CAAC;IAEvF,MAAMjB,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAACoB,MAAM,CAAElB,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKN,MAAM,CAACM,EAAE,CAAC;IACpE,OAAO;MACL,GAAGX,KAAK;MACRQ,KAAK,EAAED;IACT,CAAC;EACH;EACA,OAAOP,KAAK;AACd,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}