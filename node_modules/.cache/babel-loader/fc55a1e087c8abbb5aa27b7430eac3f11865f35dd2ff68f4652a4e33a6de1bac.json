{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vittorio\\\\Desktop\\\\react\\\\note\\\\src\\\\component\\\\noteState\\\\singleNota.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SingleId from './singleId';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass SingleNota extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleModify = (change, id, nome) => {\n      this.props.changeState(change, id, nome);\n    };\n  }\n  render() {\n    const {\n      notes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SingleId, {\n        notes: notes,\n        onModify: this.handleModify\n      }, notes.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }, this)\n    }, void 0, false);\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    notes: state.notes\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeState: (change, id, nome) => {\n      dispatch({\n        type: 'CHANGE_STATE',\n        change: change,\n        id: id,\n        nome: nome\n      });\n    }\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleNota);","map":{"version":3,"names":["React","Component","connect","SingleId","jsxDEV","_jsxDEV","Fragment","_Fragment","SingleNota","constructor","arguments","handleModify","change","id","nome","props","changeState","render","notes","children","onModify","fileName","_jsxFileName","lineNumber","columnNumber","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"sources":["C:/Users/Vittorio/Desktop/react/note/src/component/noteState/singleNota.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SingleId from './singleId';\r\n\r\nclass SingleNota extends Component {\r\n    handleModify = (change, id, nome) =>{\r\n        this.props.changeState(change, id, nome)\r\n\r\n    } \r\n\r\n    render(){\r\n        const { notes } = this.props;\r\n\r\n        return (\r\n            <>  \r\n              <SingleId\r\n                key={notes.id}\r\n                notes={notes}\r\n                onModify={this.handleModify}\r\n              />\r\n           \r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        notes: state.notes\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        changeState : (change, id, nome) => {dispatch({type: 'CHANGE_STATE', change: change, id: id, nome: nome})},\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleNota);"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,UAAU,SAASP,SAAS,CAAC;EAAAQ,YAAA;IAAA,SAAAC,SAAA;IAAA,KAC/BC,YAAY,GAAG,CAACC,MAAM,EAAEC,EAAE,EAAEC,IAAI,KAAI;MAChC,IAAI,CAACC,KAAK,CAACC,WAAW,CAACJ,MAAM,EAAEC,EAAE,EAAEC,IAAI,CAAC;IAE5C,CAAC;EAAA;EAEDG,MAAMA,CAAA,EAAE;IACJ,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACH,KAAK;IAE5B,oBACIV,OAAA,CAAAE,SAAA;MAAAY,QAAA,eACEd,OAAA,CAACF,QAAQ;QAEPe,KAAK,EAAEA,KAAM;QACbE,QAAQ,EAAE,IAAI,CAACT;MAAa,GAFvBO,KAAK,CAACL,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd;IAAC,gBAEF,CAAC;EAEX;AACJ;AAEA,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAC/B,OAAM;IACFR,KAAK,EAAEQ,KAAK,CAACR;EACjB,CAAC;AAEL,CAAC;AAED,MAAMS,kBAAkB,GAAIC,QAAQ,IAAK;EACrC,OAAM;IACFZ,WAAW,EAAGA,CAACJ,MAAM,EAAEC,EAAE,EAAEC,IAAI,KAAK;MAACc,QAAQ,CAAC;QAACC,IAAI,EAAE,cAAc;QAAEjB,MAAM,EAAEA,MAAM;QAAEC,EAAE,EAAEA,EAAE;QAAEC,IAAI,EAAEA;MAAI,CAAC,CAAC;IAAA;EAC7G,CAAC;AACL,CAAC;AAED,eAAeZ,OAAO,CAACuB,eAAe,EAAEE,kBAAkB,CAAC,CAACnB,UAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}