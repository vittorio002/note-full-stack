{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport { query, collection, onSnapshot } from \"firebase/firestore\";\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type == 'CHANGE_STATE') {\n    const newState = state.notes;\n    newState.map(note => {\n      if (note.id == action.id) {\n        note.descrizione = action.change;\n        note.nome = action.nome;\n      }\n    });\n    return {\n      ...state,\n      notes: newState\n    };\n  } else if (action.type == 'ADD_NOTE') {\n    let id = state.notes.length;\n    const newNote = {\n      id: Math.random(),\n      nome: 'new note',\n      descrizione: '.'\n    };\n    const newNotes = [...state.notes, newNote];\n    return {\n      ...state,\n      notes: newNotes\n    };\n  } else if (action.type == 'DELETE_NOTE') {\n    const newState = state.notes.filter(note => note.id != action.id);\n    return {\n      ...state,\n      notes: newState\n    };\n  }\n  return state;\n};\nexport default rootReducer;","map":{"version":3,"names":["useState","useEffect","db","query","collection","onSnapshot","rootReducer","state","arguments","length","undefined","initState","action","type","newState","notes","map","note","id","descrizione","change","nome","newNote","Math","random","newNotes","filter"],"sources":["C:/Users/Vittorio/Desktop/react/note/src/component/rootReducer.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { query, collection, onSnapshot } from \"firebase/firestore\";\r\n\r\n\r\n\r\nconst rootReducer = (state = initState, action)=>{\r\n\r\n  if(action.type == 'CHANGE_STATE'){\r\n      const newState = state.notes;\r\n      newState.map(note=>{\r\n          if(note.id == action.id){\r\n          note.descrizione = action.change\r\n          note.nome = action.nome\r\n      }})\r\n      return{\r\n          ...state,\r\n         notes: newState\r\n      }\r\n  }else if(action.type == 'ADD_NOTE'){\r\n     let id = state.notes.length\r\n     const newNote = {\r\n      id: Math.random(),\r\n      nome: 'new note',\r\n      descrizione:'.'\r\n     };\r\n     const newNotes =[...state.notes, newNote];\r\n     return{\r\n      ...state,\r\n      notes: newNotes\r\n     }\r\n  }else if(action.type == 'DELETE_NOTE'){\r\n      const newState = state.notes.filter(note=> note.id != action.id)\r\n      return{\r\n          ...state,\r\n          notes : newState\r\n      }\r\n  }\r\n  return state\r\n}\r\n\r\n\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,EAAE,QAAQ,aAAa;AAChC,SAASC,KAAK,EAAEC,UAAU,EAAEC,UAAU,QAAQ,oBAAoB;AAIlE,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA6B;EAAA,IAA5BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGG,SAAS;EAAA,IAAEC,MAAM,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAE5C,IAAGE,MAAM,CAACC,IAAI,IAAI,cAAc,EAAC;IAC7B,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,KAAK;IAC5BD,QAAQ,CAACE,GAAG,CAACC,IAAI,IAAE;MACf,IAAGA,IAAI,CAACC,EAAE,IAAIN,MAAM,CAACM,EAAE,EAAC;QACxBD,IAAI,CAACE,WAAW,GAAGP,MAAM,CAACQ,MAAM;QAChCH,IAAI,CAACI,IAAI,GAAGT,MAAM,CAACS,IAAI;MAC3B;IAAC,CAAC,CAAC;IACH,OAAM;MACF,GAAGd,KAAK;MACTQ,KAAK,EAAED;IACV,CAAC;EACL,CAAC,MAAK,IAAGF,MAAM,CAACC,IAAI,IAAI,UAAU,EAAC;IAChC,IAAIK,EAAE,GAAGX,KAAK,CAACQ,KAAK,CAACN,MAAM;IAC3B,MAAMa,OAAO,GAAG;MACfJ,EAAE,EAAEK,IAAI,CAACC,MAAM,CAAC,CAAC;MACjBH,IAAI,EAAE,UAAU;MAChBF,WAAW,EAAC;IACb,CAAC;IACD,MAAMM,QAAQ,GAAE,CAAC,GAAGlB,KAAK,CAACQ,KAAK,EAAEO,OAAO,CAAC;IACzC,OAAM;MACL,GAAGf,KAAK;MACRQ,KAAK,EAAEU;IACR,CAAC;EACJ,CAAC,MAAK,IAAGb,MAAM,CAACC,IAAI,IAAI,aAAa,EAAC;IAClC,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,KAAK,CAACW,MAAM,CAACT,IAAI,IAAGA,IAAI,CAACC,EAAE,IAAIN,MAAM,CAACM,EAAE,CAAC;IAChE,OAAM;MACF,GAAGX,KAAK;MACRQ,KAAK,EAAGD;IACZ,CAAC;EACL;EACA,OAAOP,KAAK;AACd,CAAC;AAID,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}